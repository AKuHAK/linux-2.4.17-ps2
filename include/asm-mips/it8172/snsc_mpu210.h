/*
 * BRIEF MODULE DESCRIPTION
 *	Sony NSC MPU-210 reference platform defines.
 *
 *  Copyright (C) 2002 Sony Corporation. All rights reserved.
 *
 *  This program is free software; you can redistribute  it and/or modify it
 *  under  the terms of  the GNU General  Public License as published by the
 *  Free Software Foundation;  either version 2 of the  License.
 *
 *  THIS  SOFTWARE  IS PROVIDED   ``AS  IS'' AND   ANY  EXPRESS OR IMPLIED
 *  WARRANTIES,   INCLUDING, BUT NOT  LIMITED  TO, THE IMPLIED WARRANTIES OF
 *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
 *  NO  EVENT  SHALL   THE AUTHOR  BE    LIABLE FOR ANY   DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED   TO, PROCUREMENT OF  SUBSTITUTE GOODS  OR SERVICES; LOSS OF
 *  USE, DATA,  OR PROFITS; OR  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 *  ANY THEORY OF LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 *  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *  You should have received a copy of the  GNU General Public License along
 *  with this program; if not, write  to the Free Software Foundation, Inc.,
 *  675 Mass Ave, Cambridge, MA 02139, USA.
 */

#ifndef __SNSC_MPU210__H__
#define __SNSC_MPU210__H__

/* ITE IT8172 debug LED */
#define	MPU210_DEBUG_LED(v)	(IT_WRITE(IT_SDPR, (v)))


/* Macro for ITE IT8172 PCI I/O space access */
/*
 *   These macro is defined in it8172/it8172.h.
 *     IT_IO_READ(ofs, data)
 *     IT_IO_WRITE(ofs, data)
 *     IT_IO_READ16(ofs, data)
 *     IT_IO_WRITE16(ofs, data)
 */
#define	IT_IO_IN16(ofs)	(*(volatile u16 *)KSEG1ADDR((IT8172_PCI_IO_BASE + ofs)))


/* I/O ports in ITE IT8172 PCI I/O space */
/*   Offset from IT8172_PCI_IO_BASE */
#define	MPU210_NAND_OFS		0x00020000 /* -0002ffff: NAND Flash */
#define	MPU210_EGPIO_OFS	0x00030000 /* -0003ffff: Extended GPIO */
#define	MPU210_PVR_MEM_OFS	0x00800000 /* -00ffffff: PVR-1 Mem */
#define	MPU210_PVR_IO_OFS	0x01000000 /* -01ffffff: PVR-1 I/O */
#ifdef CONFIG_ISA	/* For 16-bit PC Card support */
#define	MPU210_PCI_OFS		0x02000000 /* -02ffffff: PCI I/O */
#define	MPU210_PCI_LEN		(MPU210_ISA_OFS - MPU210_PCI_OFS)
#define	MPU210_ISA_OFS		0x03000000 /* -03ffffff: ISA I/O */
#else	/* CONFIG_ISA */
#define	MPU210_PCI_OFS		0x02000000 /* -03ffffff: PCI I/O */
#define	MPU210_PCI_LEN		0x02000000
#endif	/* CONFIG_ISA */


/* Extended GPIO */
/* 16bit access only */

#define	MPU210_EGPIO0_0	(MPU210_EGPIO_OFS + 2)	/* EGPIO0_0 */

#define	MPU210_POWER_MASK	0x0080	/* Power related mask */
#define	MPU210_POWER_ON		0x0080	/* /POWER_ON */

#define	MPU210_FLASH_NAND_MASK	0x007f	/* Flash related mask */
#define	MPU210_FLASH_NAND_BY	0x0040	/* /FLASH_BY */
#define	MPU210_FLASH_NAND_ALE	0x0020	/* /NAND_ALE */
#define	MPU210_FLASH_NAND_CLE	0x0010	/* /NAND_CLE */
#define	MPU210_FLASH_NAND_CS3	0x0008	/* /NAND_CS3 */
#define	MPU210_FLASH_NAND_CS2	0x0004	/* /NAND_CS2 */
#define	MPU210_FLASH_NAND_CS1	0x0002	/* /NAND_CS1 */
#define	MPU210_FLASH_NAND_CS0	0x0001	/* /NAND_CS0 */

#define	MPU210_LED_MASK		0xff00	/* /LED0-/LED7 */
#define	MPU210_LED_SHIFT	8
#define	MPU210_LED_VALUE(v)	((~(v) << MPU210_LED_SHIFT) & MPU210_LED_MASK)
#define	MPU210_LED(v)		IT_IO_WRITE16(MPU210_EGPIO0_0, (IT_IO_IN16(MPU210_EGPIO0_0) & ~MPU210_LED_MASK) | MPU210_LED_VALUE(v))
#define	MPU210_GET_LED()	((~(IT_IO_IN16(MPU210_EGPIO0_0)) & MPU210_LED_MASK) >> MPU210_LED_SHIFT)
#define	MPU210_LED_ON(v)	MPU210_LED(MPU210_GET_LED() | (1 << (v)))
#define	MPU210_LED_OFF(v)	MPU210_LED(MPU210_GET_LED() & ~(1 << (v)))


#define	MPU210_EGPIO0_1	(MPU210_EGPIO_OFS + 0)	/* EGPIO0_1 */

#define	MPU210_HDIPSW_MASK	0x00ff
#define	MPU210_HDIPSW8		0x0080
#define	MPU210_HDIPSW7		0x0040
#define	MPU210_HDIPSW6		0x0020
#define	MPU210_HDIPSW5		0x0010
#define	MPU210_HDIPSW4		0x0008
#define	MPU210_HDIPSW3		0x0004
#define	MPU210_HDIPSW2		0x0002
#define	MPU210_HDIPSW1		0x0001
#define	NOR_EXG			MPU210_HDIPSW1

#define	MPU210_SDIPSW_MASK	0xff00
#define	MPU210_SDIPSW8		0x8000
#define	MPU210_SDIPSW7		0x4000
#define	MPU210_SDIPSW6		0x2000
#define	MPU210_SDIPSW5		0x1000
#define	MPU210_SDIPSW4		0x0800
#define	MPU210_SDIPSW3		0x0400
#define	MPU210_SDIPSW2		0x0200
#define	MPU210_SDIPSW1		0x0100


#define	MPU210_EGPIO1_0	(MPU210_EGPIO_OFS + 6)	/* EGPIO1_0 */

#define	MPU210_GPIO_MASK	0x00fc
/* #define MPU210_GPIO_NC	0x0080 */ /* N.C. */
#define	MPU210_PVR_GPIO		0x0040	/* /PVR_GPIO */
#define	MPU210_I2S_FREQ1	0x0020	/* /I2S_FREQ1 */
#define	MPU210_I2S_FREQ0	0x0010	/* /I2S_FREQ0 */
#define	MPU210_I2S_DEMPON	0x0008	/* /I2S_DEMPON */
#define	MPU210_I2S_MUTEOFF	0x0004	/* /I2S_MUTEOFF */
#define	MPU210_GPIO_DEFAULT	(MPU210_I2S_FREQ1 | MPU210_I2S_FREQ0 | MPU210_I2S_DEMPON)

#define	MPU210_PWRCTL_MASK0	0xff03
#define	MPU210_LPC_PWRCTL	0x0002	/* /LPC_PWRCTL */
#define	MPU210_PCI2_PWRCTL	0x0001	/* /PCI2_PWRCTL */
#define	MPU210_PCI1_PWRCTL	0x8000	/* /PCI1_PWRCTL */
#define	MPU210_PCI0_PWRCTL	0x4000	/* /PCI0_PWRCTL */
/* #define MPU210_NC_PWRCTL	0x2000 */ /* N.C. */
#define	MPU210_PVR_PWRCTL	0x1000	/* /PVR_PWRCTL */
#define	MPU210_I2S_PWRCTL	0x0800	/* /I2S_PWRCTL */
#define	MPU210_AC97_PWRCTL	0x0400	/* /AC97_PWRCTL */
#define	MPU210_USB1_PWRCTL	0x0200	/* /USB1_PWRCTL */
#define	MPU210_USB0_PWRCTL	0x0100	/* /USB0_PWRCTL */
#define	MPU210_PWRCTL_DEFAULT0	0


#define	MPU210_EGPIO1_1	(MPU210_EGPIO_OFS + 4)

#define	MPU210_PWRCTL_MASK1	0x00fe
#define	MPU210_IRDA_PWRCTL	0x0080	/* /IRDA_PWRCTL */
#define	MPU210_UART2_PWRCTL1	0x0040	/* /UART2_PWRCTL1 */
#define	MPU210_UART2_PWRCTL0	0x0020	/* /UART2_PWRCTL0 */
#define	MPU210_UART1_PWRCTL1	0x0010	/* /UART1_PWRCTL1 */
#define	MPU210_UART1_PWRCTL0	0x0008	/* /UART1_PWRCTL0 */
#define	MPU210_UART0_PWRCTL1	0x0004	/* /UART0_PWRCTL1 */
#define	MPU210_UART0_PWRCTL0	0x0002	/* /UART0_PWRCTL0 */
#ifdef notdef
#define	MPU210_PWRCTL_DEFAULT1	(MPU200_UART2_PWRCTL1 | \
				 MPU200_UART1_PWRCTL1 | \
				 MPU200_UART0_PWRCTL1)
#else	/* notdef */
#define	MPU210_PWRCTL_DEFAULT1	0
#endif	/* notdef */

#define	MPU210_SRESET_MASK	0xff01
#define	MPU210_LPC_SRESET	0x0001	/* LPC_SRESET */
#define	MPU210_PCI2_SRESET	0x8000	/* PCI2_SRESET */
#define	MPU210_PCI1_SRESET	0x4000	/* PCI1_SRESET */
#define	MPU210_PCI0_SRESET	0x2000	/* PCI0_SRESET */
/* #define MPU210_NC1_SRESET	0x1000 */ /* N.C. */
#define	MPU210_PVR_SRESET	0x0800	/* PVR_SRESET */
#define	MPU210_I2S_SRESET	0x0400	/* I2S_SRESET */
#define	MPU210_AC97_SRESET	0x0200	/* AC97_SRESET */
/* #define MPU210_NC0_SRESET	0x0100 */ /* N.C. */
#define	MPU210_SRESET_ALL_CLEAR	(MPU210_LPC_SRESET | \
				 MPU210_PCI2_SRESET | \
				 MPU210_PCI1_SRESET | \
				 MPU210_PCI0_SRESET | \
				 MPU210_PVR_SRESET | \
				 MPU210_I2S_SRESET | \
				 MPU210_AC97_SRESET)
#define	MPU210_SRESET_ALL_RESET	0


/* NAND Flash ROM */
#define	MPU210_NAND_IO_BASE	(IT8172_PCI_IO_BASE + MPU210_EGPIO0_0)
#define	MPU210_NAND_FIO_BASE	(IT8172_PCI_IO_BASE + MPU210_NAND_OFS)


/* NOR Flash ROM */
#define	MPU210_NOR0_BASE	0x09000000 /* -09ffffff: NOR Flash 0 */
#define	MPU210_NOR0_SIZE	0x01000000
#define	MPU210_NOR1_BASE	0x08000000 /* -08ffffff: NOR Flash 1 */
#define	MPU210_NOR1_SIZE	0x01000000


#endif	/* __SNSC_MPU210__H__ */
